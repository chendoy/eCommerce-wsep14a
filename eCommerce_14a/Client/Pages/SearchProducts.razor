@page "/SearchProducts"
<h3>Search Products</h3>


<div class="row">
    <div class="col-md-6">
        <div class="row" style="margin-bottom:20px">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Product Keyword:" />
            </div>
            <div class="col-md-8">
                <RadzenTextBox style="width: 100%;" @bind-Value="ProductKeyword" Change="@Change" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Product Price:" />
            </div>
            <div class="col-md-8">
                <div class="row">
                    <div class="col-sm-4">
                        <RadzenLabel Text="Start" style="width: 100%;" />
                        <RadzenNumeric TValue="int" Min="1" Max="@ProductPriceRangeEnd" @bind-Value="ProductPriceRangeStart" Step="10" Change="@Change" style="width: 100%;" />
                    </div>
                    <div class="col-sm-4">
                        <RadzenLabel Text="End" style="width: 100%;" />
                        <RadzenNumeric TValue="int" Min="@ProductPriceRangeStart" @bind-Value="ProductPriceRangeEnd" Step="10" Change="@Change" style="width: 100%;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="row" style="margin-bottom:20px">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Category:" />
            </div>
            <div class="col-md-8">
                <RadzenTextBox style="width: 100%;" @bind-Value="Category" Change="@Change"/>
            </div>
        </div>
        <div class="row" style="margin-bottom:20px">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="StoreId:" />
            </div>
            <div class="col-md-8">
                <RadzenNumeric TValue="int?" Min="1" @bind-Value="StoreId" Change="@Change" style="width: 100%;" />
            </div>
        </div>
    </div>
</div>

@if (SearchResults == null || SearchResults.Count == 0)
{
    <RadzenLabel Text="No products match your search" />
}
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Category</th>
            <th>Details</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var products in SearchResults)
        {
            @foreach (var product in products.Value)
            {
                <ProductRow StoreId="products.Key" Product="product"/>
            }
        }
    </tbody>
</table>


@code {

    public string ProductKeyword { get; set; }
    public int ProductPriceRangeStart { get; set; }
    public int ProductPriceRangeEnd { get; set; }
    public string Category { get; set; }
    public int? StoreId { get; set; }

    public Dictionary<int, List<ProductData>> SearchResults { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ProductPriceRangeStart = 0;
        ProductPriceRangeEnd = 10000;
        await Change();
    }

    public async Task Change()
    {
        Dictionary<string, object> searchFields = new Dictionary<string, object>();
        if (!String.IsNullOrWhiteSpace(ProductKeyword))
        {
            searchFields[SearcherKeys.ProductKeyWord] = ProductKeyword;
        }

        Tuple<double, double> priceRange = new Tuple<double, double>(ProductPriceRangeStart, ProductPriceRangeEnd);
        searchFields[SearcherKeys.ProductPriceRange] = priceRange;

        if (!String.IsNullOrWhiteSpace(Category))
        {
            searchFields[SearcherKeys.ProductCategory] = Category;
        }

        if (StoreId.HasValue)
        {
            searchFields[SearcherKeys.StoreId] = StoreId;
        }

        SearchProductRequest request = new SearchProductRequest(searchFields);
        SearchProductResponse response = await service.GetResponse<SearchProductRequest, SearchProductResponse>(request);
        SearchResults = response.SearchResults;
        StateHasChanged();
    }

    public static class SearcherKeys
    {
        public static string ProductKeyWord = "SearchByProductKeyWord";
        public static string ProductRank = "searchByProductRank";
        public static string ProductPriceRange = "searchByProductPriceRange";
        public static string ProductName = "SearchByProductName";
        public static string ProductCategory = "searchByCategory";
        public static string StoreRank = "SearchByStoreRank";
        public static string StoreId = "SearchByStioreId";
    }


}
