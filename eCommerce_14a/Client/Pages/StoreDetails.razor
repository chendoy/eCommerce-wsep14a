@page "/Stores/{storeid:int}"
@using Data;
@using Server.Communication.DataObject.Requests;
@using Server.Communication.DataObject.Responses;
@using Server.Communication.DataObject.ThinObjects;
@inject Service.ECommerce14AService service

<h2>Store Details</h2>
@if (Store == null)
{
    <p>No such store</p>
}
else
{
    <div>
        <p>Store Id: @StoreId</p>
        <p>Store Owner: @Store.Owners[0]</p>
    </div>
    @if (Store.Products == null || Store.Products.invProducts.Count == 0)
    {
        <p><em>Sorry, there are no available products in this store right now :(</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Details</th>
                    <th>Price</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Tuple<ProductData, int> product in Store.Products.invProducts)
                {
                    <tr>
                        <ProductRow StoreId="@StoreId" Product="@product.Item1"/>
                        <td>@product.Item2</td>
                    </tr>
                }
            </tbody>
        </table>
    }


}


@code {
    [Parameter]
    public int StoreId { get; set; }
    public StoreData Store { get; set; }

    protected override void OnInitialized()
    {
        //Store = service.GetStoreById(StoreId);
    }
}
