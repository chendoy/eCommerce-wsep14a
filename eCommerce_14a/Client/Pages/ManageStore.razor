@page "/ManageStore/{storeid:int}"
@using Server 


<h1>Store Dashboard</h1>



    <h3>Staff</h3>

    @if (staffList != null)
    {
        @foreach (KeyValuePair<string, string> employee in staffList)
        {
            <RadzenCard Style="width:400px; margin-bottom: 20px; height:300px;">
                <div class="row">
                    <div class="col-md-6">
                        <div style="margin-top:20px">Employee:</div>
                        <b>employee.key</b>
                        <br />
                        <RadzenImage Path="" Style="width:100px;" />
                    </div>
                    <div class="col-md-6">
                        <div style="margin-top:20px">Role:</div>
                        <b>>employee.value</b>
                    </div>
                </div>
            </RadzenCard>
        }
    }


        <h3>Products</h3>
  

<div>
    <br />
    <h3>Promote or demote users</h3>
    <br />
    <Dropdown TItem="string" OnSelected="@OnSelected1">
        <InitialTip>Action</InitialTip>
        <ChildContent>
            @foreach (var option in options)
            {
                <DropdownListItem Item="@option">@option</DropdownListItem>
            }
        </ChildContent>
    </Dropdown>

    <Dropdown TItem="string" OnSelected="@OnSelected2">
        <InitialTip>User</InitialTip>
        <ChildContent>
            @foreach (var user in registeredUsers)
            {
                <DropdownListItem Item="@user">@user</DropdownListItem>
            }
        </ChildContent>
    </Dropdown>

    <h5 style="display: inline">to be &nbsp &nbsp </h5>

    <Dropdown TItem="string" OnSelected="@OnSelected3">
        <InitialTip>New Role</InitialTip>
        <ChildContent>
            @foreach (var role in roles)
            {
                <DropdownListItem Item="@role">@role</DropdownListItem>
            }
        </ChildContent>
    </Dropdown>

    <br /><br />
    <button class="col-1 btn btn-primary" @onclick="(()=>ApplyAction())">Apply</button>

    <br /><br />
    <div class="login-msg" style="text-align:left; font-weight:bold">
        <span>@AppointmentMessage</span>
    </div>

</div>

@code {

    [Parameter]
    public int StoreId { get; set; }

    public StoreData store { get; set; }
    private List<string> registeredUsers;
    private Dictionary<string, string> staff;
    private List<KeyValuePair<string, string>> staffList;
    private string[] roles = new string[] { "Manager", "Owner" };
    private string[] options = new string[] { "Promote", "Demote" };
    private string loggedInUser;
    public string AppointmentMessage { get; set; }

    private string selectedUser;
    private string selectedRole;
    private string selectedOption;


    protected async override Task OnInitializedAsync()
    {
        GetAllRegisteredUsersResponse response = await service.GetAllActiveUsers();
        registeredUsers = response.Users;
        loggedInUser = await ((MyAuthenticationStateProvider)AuthenticationStateProvider).GetLoggedInUsername();
        staff = await service.GetStaff(StoreId);
        staffList = staff.ToList();
    }

    private async void ApplyAction()
    {

        Tuple<bool, string> successErrorTuple = new Tuple<bool, string>(false, "default error");

        if (selectedOption == "Promote" && selectedRole == "Owner")
            successErrorTuple = await service.AppointOwner(loggedInUser, selectedUser, StoreId);


        if (selectedOption == "Promote" && selectedRole == "Manager")
            successErrorTuple = await service.AppointManager(loggedInUser, selectedUser, StoreId);

        if (selectedOption == "Demote" && selectedRole == "Owner")
            successErrorTuple = await service.DemoteOwner(loggedInUser, selectedUser, StoreId);

        if (selectedOption == "Demote" && selectedRole == "Manager")
            successErrorTuple = await service.DemoteOwner(loggedInUser, selectedUser, StoreId);


        if (successErrorTuple.Item1)
            AppointmentMessage = "Operation applied successfully";

        else
            AppointmentMessage = successErrorTuple.Item2; // the error

    }

    private void OnSelected1(string selection)
    {
        selectedOption = selection;
    }

    private void OnSelected2(string selection)
    {
        selectedUser = selection;
    }

    private void OnSelected3(string selection)
    {
        selectedRole = selection;
    }

}